/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Pramod
 */
//import com.sun.glass.events.KeyEvent;
import java.sql.*;
import java.util.Arrays;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.util.Timer;
import java.util.TimerTask;

public class quiz extends javax.swing.JFrame {

    Connection cn;
    PreparedStatement reg, logc, up_pass, gQuizc, gQuizcpl, gQuizjav, quizRes, ec, ecp, ej, ecu, ecpu, eju;
    PreparedStatement qnc, qncp, qnj, quc, qucp, quj, ac, acp, aj;
    Statement rec;
    ResultSet rs;
    int curid, log_i;
    int log, ph, dat, tq, sec, bgno, marks;
    String quizQuery, editq;
    Timer timer;
    ButtonGroup[] bg;
    java.sql.Date sdt = new java.sql.Date(new java.util.Date().getTime());

    /**
     * Creates new form quiz
     *
     * @param cn
     */
    public quiz(Connection cn) {
        initComponents();
        try {
            this.cn = cn;
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery("select max(log_id) as maxid from login");
            rs.next();
            log = rs.getInt("maxid");
            if (log == 0) {
                log = 111;
            } else {
                log++;
            }

            reg = cn.prepareStatement("insert into login values(?,?,?,?,?,?,?,?,?)");
            logc = cn.prepareStatement("select * from login where log_id=?");
            up_pass = cn.prepareStatement("update login set passw = ? where log_id = ? ");
            gQuizc = cn.prepareStatement("select * from c limit 0,10");
            gQuizcpl = cn.prepareStatement("select * from cplus limit 0,10");
            gQuizjav = cn.prepareStatement("select * from java limit 0,10");
            quizRes = cn.prepareStatement("insert into mdetail values(?,?,?,?,?)");
            //------------------------------Search by option -------------------------------------//
            ec = cn.prepareStatement("select * from c where op1=? or op2=? or op3=? or op4=?");
            ecp = cn.prepareStatement("select * from cplus where op1=? or op2=? or op3=? or op4=?");
            ej = cn.prepareStatement("select * from java where op1=? or op2=? or op3=? or op4=?");
            //------------------------------Search by ques number -------------------------------------//
            qnc = cn.prepareStatement("select * from c where quesid=?");
            qncp = cn.prepareStatement("select * from cplus where quesid=?");
            qnj = cn.prepareStatement("select * from java where quesid=?");
            //------------------------------Search by question-- -------------------------------------//
            quc = cn.prepareStatement("select * from c where ques=?");
            qucp = cn.prepareStatement("select * from cplus where ques=?");
            quj = cn.prepareStatement("select * from java where ques=?");
            //----------------------------- Update Query ---------------------------------------------//
            ecu = cn.prepareStatement("update c set ques=?,op1=?,op2=?,op3=?,op4=?,corr=? where ques=? and corr=?");
            ecpu = cn.prepareStatement("update cplus set ques=?,op1=?,op2=?,op3=?,op4=?,corr=? where ques=? and corr=?");
            eju = cn.prepareStatement("update java set ques=?,op1=?,op2=?,op3=?,op4=?,corr=? where ques=? and corr=?");
            //----------------------------Add Question -----------------------------------------------//
            ac = cn.prepareStatement("insert into c(ques,op1,op2,op3,op4,corr) values (?,?,?,?,?,?)");
            acp = cn.prepareStatement("insert into cplus(ques,op1,op2,op3,op4,corr) values (?,?,?,?,?,?)");
            aj = cn.prepareStatement("insert into java(ques,op1,op2,op3,op4,corr) values (?,?,?,?,?,?)");
            //---------------------------to check record of the user-----------------------------------//
            rec = cn.createStatement();

            login_id.setText(log + "");
            doj.setText(sdt + "");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error Occurred : " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        user = new javax.swing.JFrame();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        login_id = new javax.swing.JTextField();
        fname = new javax.swing.JTextField();
        lname = new javax.swing.JTextField();
        dob = new javax.swing.JTextField();
        jScrollpane = new javax.swing.JScrollPane();
        add = new javax.swing.JTextArea();
        phone = new javax.swing.JTextField();
        create = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        Ncan = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        doj = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        password = new javax.swing.JFrame();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        SubCheck = new javax.swing.JButton();
        ClearCheck = new javax.swing.JButton();
        pass1 = new javax.swing.JPasswordField();
        pass2 = new javax.swing.JPasswordField();
        changepass = new javax.swing.JFrame();
        change = new javax.swing.JButton();
        ChanCan = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        old = new javax.swing.JPasswordField();
        lat = new javax.swing.JPasswordField();
        latest = new javax.swing.JPasswordField();
        menu = new javax.swing.JFrame();
        c = new javax.swing.JButton();
        cplus = new javax.swing.JButton();
        java = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        option = new javax.swing.JMenu();
        adques = new javax.swing.JMenuItem();
        choption = new javax.swing.JMenuItem();
        vrecord = new javax.swing.JMenuItem();
        he = new javax.swing.JMenu();
        changepa = new javax.swing.JMenuItem();
        logout = new javax.swing.JMenuItem();
        quesframe = new javax.swing.JFrame();
        timer1 = new javax.swing.JPanel();
        timerLabel = new javax.swing.JLabel();
        quizJsp = new javax.swing.JScrollPane();
        quizPanel = new javax.swing.JPanel();
        quesSub = new javax.swing.JButton();
        changeques = new javax.swing.JFrame();
        by = new javax.swing.JTextField();
        byOption = new javax.swing.JButton();
        byNumber = new javax.swing.JButton();
        byQues = new javax.swing.JButton();
        ques = new javax.swing.JTextField();
        opt1 = new javax.swing.JTextField();
        opt2 = new javax.swing.JTextField();
        opt3 = new javax.swing.JTextField();
        opt4 = new javax.swing.JTextField();
        correct = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        upques = new javax.swing.JButton();
        nextq = new javax.swing.JButton();
        chancancel = new javax.swing.JButton();
        addques = new javax.swing.JButton();
        editmenu = new javax.swing.JFrame();
        cedit = new javax.swing.JButton();
        cpedit = new javax.swing.JButton();
        javaedit = new javax.swing.JButton();
        Record = new javax.swing.JFrame();
        Scrolrec = new javax.swing.JScrollPane();
        Scrolrecpanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        logid = new javax.swing.JTextField();
        cancel = new javax.swing.JButton();
        submit = new javax.swing.JButton();
        newreg = new javax.swing.JButton();
        pass = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();

        user.setMinimumSize(new java.awt.Dimension(800, 650));
        user.setName("newuser"); // NOI18N
        user.setResizable(false);

        jLabel4.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        jLabel4.setText("Login-ID");

        jLabel5.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        jLabel5.setText("First Name");

        jLabel6.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        jLabel6.setText("Last Name");

        jLabel7.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        jLabel7.setText("Date of Birth");

        jLabel8.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        jLabel8.setText("Address");

        jLabel9.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        jLabel9.setText("Email Address");

        jLabel10.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        jLabel10.setText("Mobile Number");

        login_id.setEditable(false);
        login_id.setFont(new java.awt.Font("Lucida Console", 2, 18)); // NOI18N
        login_id.setEditable(false);

        fname.setFont(new java.awt.Font("Lucida Console", 2, 18)); // NOI18N

        lname.setFont(new java.awt.Font("Lucida Console", 2, 18)); // NOI18N

        dob.setFont(new java.awt.Font("Lucida Console", 2, 18)); // NOI18N
        dob.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dobKeyReleased(evt);
            }
        });

        add.setColumns(20);
        add.setFont(new java.awt.Font("Lucida Console", 2, 18)); // NOI18N
        add.setRows(5);
        add.setMaximumSize(new java.awt.Dimension(200, 200));
        add.setMinimumSize(new java.awt.Dimension(4, 10));
        jScrollpane.setViewportView(add);

        phone.setFont(new java.awt.Font("Lucida Console", 2, 18)); // NOI18N
        phone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                phoneKeyReleased(evt);
            }
        });

        create.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        create.setText("Create");
        create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createActionPerformed(evt);
            }
        });

        clear.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        Ncan.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        Ncan.setText("Cancel");
        Ncan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NcanActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        jLabel11.setText("Date Of Joining");

        doj.setEditable(false);
        doj.setFont(new java.awt.Font("Lucida Console", 2, 18)); // NOI18N

        email.setFont(new java.awt.Font("Lucida Console", 2, 18)); // NOI18N

        javax.swing.GroupLayout userLayout = new javax.swing.GroupLayout(user.getContentPane());
        user.getContentPane().setLayout(userLayout);
        userLayout.setHorizontalGroup(
            userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userLayout.createSequentialGroup()
                        .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(userLayout.createSequentialGroup()
                                .addComponent(create, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26))
                            .addGroup(userLayout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)))
                        .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(userLayout.createSequentialGroup()
                                .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(Ncan, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(userLayout.createSequentialGroup()
                                .addGap(129, 129, 129)
                                .addComponent(doj))))
                    .addGroup(userLayout.createSequentialGroup()
                        .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))
                        .addGap(173, 173, 173)
                        .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollpane)
                                .addComponent(dob)
                                .addComponent(lname)
                                .addComponent(fname)
                                .addComponent(login_id)
                                .addComponent(email))
                            .addComponent(phone))))
                .addGap(76, 76, 76))
        );
        userLayout.setVerticalGroup(
            userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(login_id, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollpane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(email))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(phone)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(doj, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(55, 55, 55)
                .addGroup(userLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(create, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ncan, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clear))
                .addContainerGap())
        );

        password.setMinimumSize(new java.awt.Dimension(600, 400));
        password.setResizable(false);

        jLabel12.setFont(new java.awt.Font("Lucida Console", 2, 18)); // NOI18N
        jLabel12.setText("Enter Password");

        jLabel13.setFont(new java.awt.Font("Lucida Console", 2, 18)); // NOI18N
        jLabel13.setText("Re-Enter Password");

        SubCheck.setFont(new java.awt.Font("Lucida Console", 2, 18)); // NOI18N
        SubCheck.setText("Submit");
        SubCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubCheckActionPerformed(evt);
            }
        });

        ClearCheck.setFont(new java.awt.Font("Lucida Console", 2, 18)); // NOI18N
        ClearCheck.setText("Clear");
        ClearCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearCheckActionPerformed(evt);
            }
        });

        pass1.setFont(new java.awt.Font("Lucida Console", 2, 14)); // NOI18N

        pass2.setFont(new java.awt.Font("Lucida Console", 2, 14)); // NOI18N

        javax.swing.GroupLayout passwordLayout = new javax.swing.GroupLayout(password.getContentPane());
        password.getContentPane().setLayout(passwordLayout);
        passwordLayout.setHorizontalGroup(
            passwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passwordLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(passwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(passwordLayout.createSequentialGroup()
                        .addComponent(SubCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(140, 140, 140)
                        .addComponent(ClearCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(82, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, passwordLayout.createSequentialGroup()
                        .addGroup(passwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(passwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pass1)
                            .addComponent(pass2, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
                        .addGap(73, 73, 73))))
        );
        passwordLayout.setVerticalGroup(
            passwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(passwordLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(passwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pass1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(passwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pass2, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                .addGap(76, 76, 76)
                .addGroup(passwordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SubCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClearCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        changepass.setMinimumSize(new java.awt.Dimension(550, 400));

        change.setFont(new java.awt.Font("Lucida Console", 3, 14)); // NOI18N
        change.setText("Change");
        change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeActionPerformed(evt);
            }
        });

        ChanCan.setFont(new java.awt.Font("Lucida Console", 3, 14)); // NOI18N
        ChanCan.setText("Cancel");
        ChanCan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChanCanActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Lucida Console", 3, 14)); // NOI18N
        jLabel14.setText("Enter Old Password");

        jLabel15.setFont(new java.awt.Font("Lucida Console", 3, 14)); // NOI18N
        jLabel15.setText("Enter New Password");

        jLabel16.setFont(new java.awt.Font("Lucida Console", 3, 14)); // NOI18N
        jLabel16.setText("Re-Enter Password");

        old.setFont(new java.awt.Font("Lucida Console", 2, 14)); // NOI18N

        lat.setFont(new java.awt.Font("Lucida Console", 2, 14)); // NOI18N

        latest.setFont(new java.awt.Font("Lucida Console", 2, 14)); // NOI18N

        javax.swing.GroupLayout changepassLayout = new javax.swing.GroupLayout(changepass.getContentPane());
        changepass.getContentPane().setLayout(changepassLayout);
        changepassLayout.setHorizontalGroup(
            changepassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(changepassLayout.createSequentialGroup()
                .addGroup(changepassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(changepassLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(change, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(changepassLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(changepassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 123, Short.MAX_VALUE)
                .addGroup(changepassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(changepassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(ChanCan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, changepassLayout.createSequentialGroup()
                            .addGroup(changepassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lat)
                                .addComponent(latest, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE))
                            .addGap(33, 33, 33)))
                    .addComponent(old, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        changepassLayout.setVerticalGroup(
            changepassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(changepassLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(changepassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(old, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(changepassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lat, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(changepassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(latest, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(changepassLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(change, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChanCan, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54))
        );

        menu.setMinimumSize(new java.awt.Dimension(700, 500));
        menu.setResizable(false);

        c.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        c.setText("C");
        c.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cActionPerformed(evt);
            }
        });

        cplus.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        cplus.setText("C++");
        cplus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cplusActionPerformed(evt);
            }
        });

        java.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        java.setText("JAVA");
        java.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                javaActionPerformed(evt);
            }
        });

        option.setText("Option");
        option.setFont(new java.awt.Font("Lucida Console", 3, 14)); // NOI18N
        option.setMinimumSize(new java.awt.Dimension(27, 50));
        option.setPreferredSize(new java.awt.Dimension(65, 30));

        adques.setFont(new java.awt.Font("Lucida Console", 2, 12)); // NOI18N
        adques.setText("Add Question");
        adques.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adquesActionPerformed(evt);
            }
        });
        option.add(adques);

        choption.setFont(new java.awt.Font("Lucida Console", 2, 12)); // NOI18N
        choption.setText("Edit Question ");
        choption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choptionActionPerformed(evt);
            }
        });
        option.add(choption);

        vrecord.setFont(new java.awt.Font("Lucida Console", 2, 12)); // NOI18N
        vrecord.setText("View Record");
        vrecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vrecordActionPerformed(evt);
            }
        });
        option.add(vrecord);

        jMenuBar1.add(option);

        he.setText("Help");
        he.setFont(new java.awt.Font("Lucida Console", 3, 14)); // NOI18N
        he.setPreferredSize(new java.awt.Dimension(65, 30));

        changepa.setFont(new java.awt.Font("Lucida Console", 2, 12)); // NOI18N
        changepa.setText("Change Password");
        changepa.setPreferredSize(new java.awt.Dimension(200, 25));
        changepa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changepaActionPerformed(evt);
            }
        });
        he.add(changepa);

        logout.setFont(new java.awt.Font("Lucida Console", 2, 12)); // NOI18N
        logout.setText("Logout");
        logout.setPreferredSize(new java.awt.Dimension(200, 25));
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });
        he.add(logout);

        jMenuBar1.add(he);

        menu.setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout menuLayout = new javax.swing.GroupLayout(menu.getContentPane());
        menu.getContentPane().setLayout(menuLayout);
        menuLayout.setHorizontalGroup(
            menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuLayout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(c, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 181, Short.MAX_VALUE)
                .addComponent(cplus, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(99, 99, 99))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(java, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(259, 259, 259))
        );
        menuLayout.setVerticalGroup(
            menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuLayout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(menuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(c, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cplus, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(84, 84, 84)
                .addComponent(java, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(86, Short.MAX_VALUE))
        );

        quesframe.setMinimumSize(new java.awt.Dimension(1368, 768));

        timer1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 51, 51), new java.awt.Color(255, 153, 153), new java.awt.Color(51, 204, 255), new java.awt.Color(102, 0, 102)));

        timerLabel.setFont(new java.awt.Font("Lucida Bright", 3, 36)); // NOI18N

        javax.swing.GroupLayout timer1Layout = new javax.swing.GroupLayout(timer1);
        timer1.setLayout(timer1Layout);
        timer1Layout.setHorizontalGroup(
            timer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(timer1Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(timerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(81, Short.MAX_VALUE))
        );
        timer1Layout.setVerticalGroup(
            timer1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(timerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
        );

        quizPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 204, 0), 3));
        JScrollPane quizJsp = new JScrollPane(quizPanel);
        quizPanel.setLayout(new java.awt.GridLayout(0, 1));
        quizJsp.setViewportView(quizPanel);

        quesSub.setFont(new java.awt.Font("Lucida Console", 2, 18)); // NOI18N
        quesSub.setText("Submit");
        quesSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quesSubActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout quesframeLayout = new javax.swing.GroupLayout(quesframe.getContentPane());
        quesframe.getContentPane().setLayout(quesframeLayout);
        quesframeLayout.setHorizontalGroup(
            quesframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(quesframeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(quesframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(quizJsp, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, quesframeLayout.createSequentialGroup()
                        .addGap(0, 238, Short.MAX_VALUE)
                        .addComponent(timer1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(245, 245, 245))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, quesframeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(quesSub, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(258, 258, 258))
        );
        quesframeLayout.setVerticalGroup(
            quesframeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(quesframeLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(timer1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(quizJsp, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(quesSub, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        changeques.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        changeques.setMinimumSize(new java.awt.Dimension(1368, 768));

        by.setFont(new java.awt.Font("Lucida Console", 2, 14)); // NOI18N

        byOption.setFont(new java.awt.Font("Lucida Console", 3, 14)); // NOI18N
        byOption.setText("Search by Option");
        byOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                byOptionActionPerformed(evt);
            }
        });

        byNumber.setFont(new java.awt.Font("Lucida Console", 3, 14)); // NOI18N
        byNumber.setText("Search By Question Number");
        byNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                byNumberActionPerformed(evt);
            }
        });

        byQues.setFont(new java.awt.Font("Lucida Console", 3, 14)); // NOI18N
        byQues.setText("Search By Question");
        byQues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                byQuesActionPerformed(evt);
            }
        });

        ques.setFont(new java.awt.Font("Lucida Console", 3, 14)); // NOI18N

        opt1.setFont(new java.awt.Font("Lucida Console", 2, 14)); // NOI18N

        opt2.setFont(new java.awt.Font("Lucida Console", 2, 14)); // NOI18N

        opt3.setFont(new java.awt.Font("Lucida Console", 2, 14)); // NOI18N

        opt4.setFont(new java.awt.Font("Lucida Console", 2, 14)); // NOI18N

        correct.setFont(new java.awt.Font("Lucida Console", 2, 14)); // NOI18N

        jLabel17.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        jLabel17.setText("Correct Option");

        upques.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        upques.setText("Update Question");
        upques.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upquesActionPerformed(evt);
            }
        });

        nextq.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        nextq.setText("Next Question");
        nextq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextqActionPerformed(evt);
            }
        });

        chancancel.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        chancancel.setText("Cancel");
        chancancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chancancelActionPerformed(evt);
            }
        });

        addques.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        addques.setText("Add Question");
        addques.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addquesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout changequesLayout = new javax.swing.GroupLayout(changeques.getContentPane());
        changeques.getContentPane().setLayout(changequesLayout);
        changequesLayout.setHorizontalGroup(
            changequesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(changequesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(changequesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ques, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(changequesLayout.createSequentialGroup()
                        .addComponent(byOption, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(byNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(byQues, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(by)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, changequesLayout.createSequentialGroup()
                        .addGroup(changequesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(changequesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(opt1)
                                .addComponent(opt4, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE))
                            .addGroup(changequesLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(changequesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(changequesLayout.createSequentialGroup()
                                        .addComponent(upques, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(47, 47, 47)
                                        .addComponent(addques, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(changequesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, changequesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(correct)
                                .addComponent(opt2, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
                                .addComponent(opt3)
                                .addComponent(nextq, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(chancancel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        changequesLayout.setVerticalGroup(
            changequesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(changequesLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(by, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(changequesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(byOption)
                    .addComponent(byNumber)
                    .addComponent(byQues))
                .addGap(39, 39, 39)
                .addComponent(ques, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(changequesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(opt1, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(opt2))
                .addGap(37, 37, 37)
                .addGroup(changequesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(opt4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(opt3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(changequesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(changequesLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(changequesLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(correct, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(nextq, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(changequesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(upques, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addques, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(chancancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        editmenu.setMinimumSize(new java.awt.Dimension(700, 200));

        cedit.setFont(new java.awt.Font("Lucida Console", 3, 14)); // NOI18N
        cedit.setText("C Question");
        cedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ceditActionPerformed(evt);
            }
        });

        cpedit.setFont(new java.awt.Font("Lucida Console", 3, 14)); // NOI18N
        cpedit.setText("C++ Question");
        cpedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpeditActionPerformed(evt);
            }
        });

        javaedit.setFont(new java.awt.Font("Lucida Console", 3, 14)); // NOI18N
        javaedit.setText("Java Question");
        javaedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                javaeditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editmenuLayout = new javax.swing.GroupLayout(editmenu.getContentPane());
        editmenu.getContentPane().setLayout(editmenuLayout);
        editmenuLayout.setHorizontalGroup(
            editmenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editmenuLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(cedit, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(cpedit, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(javaedit, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );
        editmenuLayout.setVerticalGroup(
            editmenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editmenuLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(editmenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cedit, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(javaedit, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cpedit, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        Record.setMinimumSize(new java.awt.Dimension(664, 520));
        Record.setResizable(false);

        Scrolrec.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51)));
        Scrolrec.setMinimumSize(new java.awt.Dimension(664, 493));
        Scrolrec.setPreferredSize(new java.awt.Dimension(664, 493));

        Scrolrecpanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Scrolrecpanel.setMinimumSize(new java.awt.Dimension(664, 493));
        Scrolrecpanel.setLayout(new java.awt.GridLayout(0, 1));
        Scrolrec.setViewportView(Scrolrecpanel);

        jButton1.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RecordLayout = new javax.swing.GroupLayout(Record.getContentPane());
        Record.getContentPane().setLayout(RecordLayout);
        RecordLayout.setHorizontalGroup(
            RecordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Scrolrec, javax.swing.GroupLayout.PREFERRED_SIZE, 650, Short.MAX_VALUE)
            .addGroup(RecordLayout.createSequentialGroup()
                .addGap(217, 217, 217)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        RecordLayout.setVerticalGroup(
            RecordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RecordLayout.createSequentialGroup()
                .addComponent(Scrolrec, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(815, 550));
        setName("main"); // NOI18N
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Lucida Console", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 0));
        jLabel1.setText("Password");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(530, 440, 130, 25);

        jLabel3.setFont(new java.awt.Font("Lucida Console", 3, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 51));
        jLabel3.setText("Login-Id");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(530, 400, 130, 30);

        logid.setFont(new java.awt.Font("Comic Sans MS", 3, 14)); // NOI18N
        getContentPane().add(logid);
        logid.setBounds(660, 400, 129, 20);

        cancel.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        cancel.setForeground(new java.awt.Color(255, 153, 51));
        cancel.setText("Close");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        getContentPane().add(cancel);
        cancel.setBounds(670, 470, 120, 20);

        submit.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        submit.setForeground(new java.awt.Color(255, 153, 51));
        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });
        getContentPane().add(submit);
        submit.setBounds(530, 470, 130, 20);

        newreg.setFont(new java.awt.Font("Lucida Console", 3, 18)); // NOI18N
        newreg.setForeground(new java.awt.Color(255, 153, 51));
        newreg.setText("New Registration");
        newreg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newregActionPerformed(evt);
            }
        });
        getContentPane().add(newreg);
        newreg.setBounds(530, 500, 250, 27);

        pass.setFont(new java.awt.Font("Lucida Console", 3, 14)); // NOI18N
        getContentPane().add(pass);
        pass.setBounds(660, 440, 130, 20);

        jLabel2.setForeground(new java.awt.Color(51, 51, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Pramod\\Documents\\NetBeansProjects\\quiz\\pictures\\qizmain.jpg")); // NOI18N
        jLabel2.setOpaque(true);
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 800, 540);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        String passt = new String(pass.getPassword());
        if (logid.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter Login-ID");
        } else if (passt.equals("")) {
            JOptionPane.showMessageDialog(null, "Please enter Password");
        } else {
            try {
                log_i = Integer.parseInt(logid.getText());
                logc.setInt(1, log_i);
                rs = logc.executeQuery();
                rs.next();
                if ((rs.getString("passw")).equals(passt)) {
                    curid = Integer.parseInt(logid.getText());
                    menu.setVisible(true);
                    menu.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
                    if (log_i == 100) {                     //login_id of 100 is for administrators priviledge
                        choption.setVisible(true);
                        adques.setVisible(true);
                    } else {
                        choption.setVisible(false);
                        adques.setVisible(false);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Invalid Login-Id or Password");
                }
                logid.setText("");
                pass.setText("");
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Invalid Login-Id or Password");
                logid.setText("");
                pass.setText("");
            }
        }
    }//GEN-LAST:event_submitActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        System.exit(0);
    }//GEN-LAST:event_cancelActionPerformed

/****************************************NewRegistration*******************************************************/

    private void newregActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newregActionPerformed
        user.setVisible(true);
    }//GEN-LAST:event_newregActionPerformed
	
    private void createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createActionPerformed
        try
		{
            if (ph < 10) {
                JOptionPane.showMessageDialog(null, "Enter a valid ten digit number");
            } else if (dat < 10) {
                JOptionPane.showMessageDialog(null, "Please Use Date Pattern YYYY-MM-DD");
            } else {
                reg.setInt(1, Integer.parseInt(login_id.getText()));
                reg.setString(3, fname.getText());
                reg.setString(4, lname.getText());
                reg.setString(5, dob.getText());
                reg.setString(6, add.getText());
                reg.setString(7, email.getText());
                reg.setString(8, phone.getText());
                reg.setString(9, doj.getText());
                password.setVisible(true);
                user.dispose();
            }
        }
		catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error Occurred : " + e.getMessage());
        }
    }//GEN-LAST:event_createActionPerformed

	private void phoneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phoneKeyReleased
        String s = phone.getText();
        ph = s.length();
        if (ph > 10) {
            JOptionPane.showMessageDialog(null, "Only Ten Digit Mobile Number");
            phone.setText("");
        }
        if (ph > 0) {
            if (!((int) (s.charAt(ph - 1)) >= 48 && ((int) (s.charAt(ph - 1))) <= 57)) {
                JOptionPane.showMessageDialog(null, "Character are not Allowed");
                phone.setText("");
            }
        }
    }//GEN-LAST:event_phoneKeyReleased

	private void dobKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dobKeyReleased
        String s = dob.getText();
        dat = s.length();
        if (dat > 10) {
            JOptionPane.showMessageDialog(null, "Please Use Date Pattern YYYY-MM-DD");
            dob.setText("");
        }
        if (dat > 0) {
            if (!((((int) s.charAt(dat - 1)) >= 48 && ((int) s.charAt(dat - 1)) <= 57) || s.charAt(dat - 1) == '-')) {
                JOptionPane.showMessageDialog(null, "Please Use Date Pattern YYYY-MM-DD");
                dob.setText("");
            }
        }
    }//GEN-LAST:event_dobKeyReleased

	private void SubCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubCheckActionPerformed
            try {
                if ((Arrays.toString(pass1.getPassword())).equals(Arrays.toString(pass2.getPassword()))) {
                    String pa = new String(pass1.getPassword());
                    reg.setString(2, pa);
                    reg.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Account Created");
                    password.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "Password Mismatch");
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error Occurred : " + e.getMessage());
            }
    }//GEN-LAST:event_SubCheckActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        clear();
    }//GEN-LAST:event_clearActionPerformed
    private void NcanActionPerformed(java.awt.event.ActionEvent evt) {
        user.dispose();
    }

    //Password Frame Clear
    private void ClearCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearCheckActionPerformed
        pass1.setText("");
        pass2.setText("");
    }//GEN-LAST:event_ClearCheckActionPerformed
	
    public void clear() {
        fname.setText("");
        lname.setText("");
        dob.setText("");
        add.setText("");
        email.setText("");
        phone.setText("");
        by.setText("");
        ques.setText("");
        opt1.setText("");
        opt2.setText("");
        opt3.setText("");
        opt4.setText("");
        correct.setText("");
    }
/******************************************CompletedRegistration***********************************/


    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        menu.dispose();
        try {
            rs.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error Occurred : " + e.getMessage());
        }
    }//GEN-LAST:event_logoutActionPerformed

/*********************************ChangePassword**************************************************/

    private void changepaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changepaActionPerformed
        changepass.setVisible(true);
    }//GEN-LAST:event_changepaActionPerformed

    private void ChanCanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChanCanActionPerformed
        changepass.dispose();
    }//GEN-LAST:event_ChanCanActionPerformed

    private void changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeActionPerformed
        try {
            if ((String.valueOf(old.getPassword())).equals(rs.getString("passw"))) {
                String s = new String(latest.getPassword());
                if ((String.valueOf(lat.getPassword())).equals(s)) {
                    up_pass.setString(1, s);
                    up_pass.setInt(2, rs.getInt("log_id"));  //here resultset is of submitbutton at login page
                    up_pass.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Password Changed");
                    changepass.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "Password Mismatch");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please Enter a Valid Password");
            }
            old.setText("");
            lat.setText("");
            latest.setText("");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error Occured : " + e.getMessage());
        }
    }//GEN-LAST:event_changeActionPerformed
/******************************DoneChangePassword**************************************************/
    
    private void cActionPerformed(java.awt.event.ActionEvent evt) 
	{//GEN-FIRST:event_cActionPerformed
        quesframe.setVisible(true);
        createQuiz(evt);
        timer();
        //menu.dispose();
    }//GEN-LAST:event_cActionPerformed
	
    private void cplusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cplusActionPerformed
        quesframe.setVisible(true);
        createQuiz(evt);
        timer();
    }//GEN-LAST:event_cplusActionPerformed

    private void javaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_javaActionPerformed
        quesframe.setVisible(true);
        createQuiz(evt);
        timer();
    }//GEN-LAST:event_javaActionPerformed
	
    public void timer() {
        quesSub.setEnabled(false);
        final Timer timer = new Timer();
        sec = 45;
        
        timer.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {
                timerLabel.setText(String.valueOf(sec));
                sec--;
                if (sec < 10) {
                    Toolkit.getDefaultToolkit().beep();
                    quesSub.setEnabled(true);
                }

                if (sec < 0) {
                    timer.cancel(); //cancel all currently schedule timer;
                    timer.purge(); //remove all canceled timer from timer task queue;
                    quesSub.doClick();
                    quesframe.dispose();
                }
            }
        }, 0, 1000);  //nanoseconds
    }

 /***********************SubmitButtonForQuestionFrame****************************************/
    private void quesSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quesSubActionPerformed
        try {
            int totq = 0;
            marks = 0;
            rs.last();
            tq--;
            while (tq >= 0) {
                if (bg[tq].getSelection() != null) {
                    String s = bg[tq].getSelection().getActionCommand();
                    if (s.equals(rs.getString("corr"))) {
                        marks++;
                    }
                }
                totq++;
                tq--;
                rs.previous();
            }
            JOptionPane.showMessageDialog(null, marks + "");
            quizRes.setInt(1, curid);
            quizRes.setInt(3, marks);
            quizRes.setInt(4, totq);
            quizRes.setDate(5, sdt);
            quizRes.executeUpdate();

            quizPanel.removeAll();
            quizPanel.revalidate();
            quizPanel.repaint();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "" + e.getMessage());
        }

        /*Random number = new Random();
       int low=0,high=10;
       int ranNumber = number.nextInt((high-low)+low);
         */

    }//GEN-LAST:event_quesSubActionPerformed


    private void choptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choptionActionPerformed
        editmenu.setVisible(true);
        menu.setVisible(false);
        by.setVisible(true);
        byOption.setVisible(true);
        byQues.setVisible(true);
        byNumber.setVisible(true);
        nextq.setVisible(true);
        upques.setVisible(true);
        addques.setVisible(false);
    }//GEN-LAST:event_choptionActionPerformed

    private void byOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_byOptionActionPerformed
        try {
            nextq.setEnabled(false);
            String getby = by.getText();           //here getby is option it can be 1,2,3,4.
            if (editq.equals("c")) {
                ec.setString(1, getby);
                ec.setString(2, getby);
                ec.setString(3, getby);
                ec.setString(4, getby);
                rs = ec.executeQuery();
            } else if (editq.equals("cp")) {
                ecp.setString(1, getby);
                ecp.setString(2, getby);
                ecp.setString(3, getby);
                ecp.setString(4, getby);
                rs = ecp.executeQuery();
            } else if (editq.equals("j")) {
                ej.setString(1, getby);
                ej.setString(2, getby);
                ej.setString(3, getby);
                ej.setString(4, getby);
                rs = ej.executeQuery();
            }
            if (rs.next()) //to check whether it has next item or not
            {
                editWrite();
            } else {
                JOptionPane.showMessageDialog(null, "No Such Option");
                clear();
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error occured : " + e.getMessage());
        }
    }//GEN-LAST:event_byOptionActionPerformed

    private void byNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_byNumberActionPerformed
        //-------- search perofrm by qoestion number
        try {
            int getby = Integer.parseInt(by.getText());           //here getby is option it can be 1,2,3,4.
            if (editq.equals("c")) {
                qnc.setInt(1, getby);
                rs = qnc.executeQuery();
            } else if (editq.equals("cp")) {
                qncp.setInt(1, getby);
                rs = qncp.executeQuery();
            } else if (editq.equals("j")) {
                qnj.setInt(1, getby);
                rs = qnj.executeQuery();
            }
            if (rs.next()) //to check whether it has next item or not
            {
                editWrite();
            } else {
                JOptionPane.showMessageDialog(null, "No Such Question Id");
                clear();
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error occured : " + e.getMessage());
        }
    }//GEN-LAST:event_byNumberActionPerformed

    private void byQuesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_byQuesActionPerformed
        try {
            String getby = by.getText();           //here getby is question it can be 1,2,3,4.
            if (editq.equals("c")) {
                quc.setString(1, getby);
                rs = quc.executeQuery();
            } else if (editq.equals("cp")) {
                quc.setString(1, getby);
                rs = quc.executeQuery();
            } else if (editq.equals("j")) {
                quc.setString(1, getby);
                rs = quc.executeQuery();
            }
            if (rs.next()) //to check whether it has next item or not
            {
                editWrite();
            } else {
                JOptionPane.showMessageDialog(null, " No Such Question ");
                clear();
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error occured : " + e.getMessage());
        }
    }//GEN-LAST:event_byQuesActionPerformed

    private void upquesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upquesActionPerformed
        //-------- updation peroform to question
        try {
            rs.previous();
            String q, op1, op2, op3, op4, cor, qp, corp;    //qp and corp are for finding ques and corr option before changes
            q = ques.getText();                    // have been made to them.
            op1 = opt1.getText();
            op2 = opt2.getText();
            op3 = opt3.getText();
            op4 = opt4.getText();
            cor = correct.getText();
            qp = rs.getString("ques");
            corp = rs.getString("corr");
            // check whether text box are blanks or not
            if (q.isEmpty() || op1.isEmpty() || op2.isEmpty() || op3.isEmpty() || op4.isEmpty() || cor.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Blank Entry or Entries");
            } else {
                if (editq.equals("c")) {
                    ecu.setString(1, q);
                    ecu.setString(2, op1);
                    ecu.setString(3, op2);
                    ecu.setString(4, op3);
                    ecu.setString(5, op4);
                    ecu.setString(6, cor);
                    ecu.setString(7, qp);
                    ecu.setString(8, corp);
                    ecu.executeUpdate();
                } else if (editq.equals("cp")) {
                    ecpu.setString(1, q);
                    ecpu.setString(2, op1);
                    ecpu.setString(3, op2);
                    ecpu.setString(4, op3);
                    ecpu.setString(5, op4);
                    ecpu.setString(6, cor);
                    ecpu.setString(7, qp);
                    ecpu.setString(8, corp);
                    ecpu.executeUpdate();
                } else if (editq.equals("j")) {
                    eju.setString(1, q);
                    eju.setString(2, op1);
                    eju.setString(3, op2);
                    eju.setString(4, op3);
                    eju.setString(5, op4);
                    eju.setString(6, cor);
                    eju.setString(7, qp);
                    eju.setString(8, corp);
                    eju.executeUpdate();
                }
                JOptionPane.showMessageDialog(null, "Question updates Successfully");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error Occured : " + e.getMessage());
        }
        changeques.setVisible(false);
        menu.setVisible(true);
    }//GEN-LAST:event_upquesActionPerformed

    private void ceditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ceditActionPerformed
        editq = "c";
        changeques.setVisible(true);
        editmenu.setVisible(false);
        clear();
    }//GEN-LAST:event_ceditActionPerformed

    private void cpeditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpeditActionPerformed
        editq = "cp";
        changeques.setVisible(true);
        editmenu.setVisible(false);
        clear();
    }//GEN-LAST:event_cpeditActionPerformed

    private void javaeditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_javaeditActionPerformed
        editq = "j";
        changeques.setVisible(true);
        editmenu.setVisible(false);
        clear();
    }//GEN-LAST:event_javaeditActionPerformed

    private void nextqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextqActionPerformed
        editWrite();
    }//GEN-LAST:event_nextqActionPerformed

    public void editWrite() {
        try {
            ques.setText(rs.getString("ques"));
            opt1.setText(rs.getString("op1"));
            opt2.setText(rs.getString("op2"));
            opt3.setText(rs.getString("op3"));
            opt4.setText(rs.getString("op4"));
            correct.setText(rs.getString("corr"));
            nextq.setEnabled(false);
            if (rs.next()) {
                nextq.setEnabled(true);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error Occured : " + e.getMessage());
        }
    }
    
    private void chancancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chancancelActionPerformed
        menu.setVisible(true);
        changeques.setVisible(false);
    }//GEN-LAST:event_chancancelActionPerformed

    private void vrecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vrecordActionPerformed
        Record.setVisible(true);
        try {
            QPanel r[];
            int i = 0;
            if (log_i == 100) {
                rs = rec.executeQuery("select * from mdetail");
            } else {
                rs = rec.executeQuery("select * from mdetail where log_id = " + log_i);
            }

            while (rs.next()) {
                i++;
            }

            if (i > 0) {
                r = new QPanel[i];
                rs.first();
                i = 0;
                do {
                    r[i] = new QPanel(10, 10, 10, 10);
                    r[i].setLayout(new GridLayout(1, 1, 5, 5));
                    r[i].setFont(new Font("lucida console", Font.PLAIN, 12));
                    //r[i].setBorder(BorderFactory.createLineBorder(Color.RED,1) );
                    String s = String.format("%5d %25s  %10d %5d %20s", rs.getInt("log_id"), rs.getString(2), rs.getInt(3), rs.getInt(4), rs.getString(5));
                    JLabel jl = new JLabel(s);
                    r[i].add(jl);
                    Scrolrecpanel.add(r[i]);
                    i++;
                } while (rs.next());
            } else {
                JOptionPane.showMessageDialog(null, "No Records To Display");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error Occured : " + e.getMessage());
        }
    }//GEN-LAST:event_vrecordActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Record.setVisible(false);
        Record.dispose();
        menu.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

/*********************************AddingNewQuestion*******************************************************/
    private void adquesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adquesActionPerformed
        //menu item in menu frame
        editmenu.setVisible(true);
        addques.setVisible(true);
        menu.setVisible(false);
        by.setVisible(false);
        byOption.setVisible(false);
        byQues.setVisible(false);
        byNumber.setVisible(false);
        nextq.setVisible(false);
        upques.setVisible(false);
    }//GEN-LAST:event_adquesActionPerformed

    private void addquesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addquesActionPerformed
        try {
            if (editq.equals("c")) {
                ac.setString(1, ques.getText());
                ac.setString(2, opt1.getText());
                ac.setString(3, opt2.getText());
                ac.setString(4, opt3.getText());
                ac.setString(5, opt4.getText());
                ac.setString(6, correct.getText());
                ac.executeUpdate();
            } else if (editq.equals("cp")) {
                acp.setString(1, ques.getText());
                acp.setString(2, opt1.getText());
                acp.setString(3, opt2.getText());
                acp.setString(4, opt3.getText());
                acp.setString(5, opt4.getText());
                acp.setString(6, correct.getText());
                acp.executeUpdate();
            } else if (editq.equals("j")) {
                aj.setString(1, ques.getText());
                aj.setString(2, opt1.getText());
                aj.setString(3, opt2.getText());
                aj.setString(4, opt3.getText());
                aj.setString(5, opt4.getText());
                aj.setString(6, correct.getText());
                aj.executeUpdate();
            }
            JOptionPane.showMessageDialog(null, "Question Inserted Succesfully");
            clear();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error Occured : " + e.getMessage());
        }
    }//GEN-LAST:event_addquesActionPerformed
/******************************************AddedQuestion************************************************/

    public void createQuiz(ActionEvent evt) {
        quesframe.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        try {
            QPanel p[];

            if (evt.getSource() == c) {
                JOptionPane.showMessageDialog(null, "c is pressed");
                rs = gQuizc.executeQuery();
                quizRes.setString(2, "C Programming");  //for as in time of marks entry in table we will not known that which exam has taken.
            } else if (evt.getSource() == cplus) {
                JOptionPane.showMessageDialog(null, "cplus is pressed");
                rs = gQuizcpl.executeQuery();
                quizRes.setString(2, "C++ Programming");
            } else if (evt.getSource() == java) {
                JOptionPane.showMessageDialog(null, "java is pressed");
                rs = gQuizjav.executeQuery();
                quizRes.setString(2, "Java Programming");
            }
            tq = 0;
            while (rs.next()) {
                tq++;
            }

            rs.first();
            if (tq > 0) {
                p = new QPanel[tq];
                bg = new ButtonGroup[tq];
                tq = 0;
                do {
                    p[tq] = new QPanel(10, 10, 10, 10);
                    p[tq].setLayout(new BorderLayout(5, 5));
                    p[tq].setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                    JLabel jl = new JLabel(rs.getInt("quesid") + ". " + rs.getString("ques"));
                    jl.setFont(new Font("lucida console", Font.BOLD, 18));

                    QPanel p1 = new QPanel(10, 10, 10, 10);
                    p1.setLayout(new GridLayout(2, 2, 5, 5));

                    JRadioButton jr1 = new JRadioButton(rs.getString("op1"));
                    jr1.setFont(new Font("lucida console", Font.ITALIC, 16));
                    jr1.setActionCommand(rs.getString("op1"));

                    JRadioButton jr2 = new JRadioButton(rs.getString("op2"));
                    jr2.setFont(new Font("lucida console", Font.ITALIC, 16));
                    jr2.setActionCommand(rs.getString("op2"));

                    JRadioButton jr3 = new JRadioButton(rs.getString("op3"));
                    jr3.setFont(new Font("lucida console", Font.ITALIC, 16));
                    jr3.setActionCommand(rs.getString("op3"));

                    JRadioButton jr4 = new JRadioButton(rs.getString("op4"));
                    jr4.setFont(new Font("lucida console", Font.ITALIC, 16));
                    jr4.setActionCommand(rs.getString("op4"));

                    bg[tq] = new ButtonGroup();
                    bg[tq].add(jr1);
                    bg[tq].add(jr2);
                    bg[tq].add(jr3);
                    bg[tq].add(jr4);

                    p1.add(jr1);
                    p1.add(jr2);
                    p1.add(jr3);
                    p1.add(jr4);

                    p[tq].add(jl, BorderLayout.NORTH);
                    p[tq].add(p1, BorderLayout.CENTER);
                    quizPanel.add(p[tq]);
                    tq++;
                } while (rs.next());
            } else {
                quizPanel.removeAll();
            }
            quizPanel.revalidate();
            quizPanel.repaint();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error Occured : " + e.getMessage());
        }
    }


    class QPanel extends JPanel {

        int t, l, b, r;

        QPanel(int t, int l, int b, int r) {
            this.t = t;
            this.l = l;
            this.b = b;
            this.r = r;
        }

        @Override
        public void paintComponent(Graphics g) {
            super.paintComponent(g);
        }

        @Override
        public Insets getInsets() {
            return new Insets(t, l, b, r);
        }
    }

    public static void main(String args[]) {
        EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                Connection cn = null;
                try {
                    Class.forName("com.mysql.jdbc.Driver");
                    cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/questionbank", "root", "PramodBorana");
                } catch (ClassNotFoundException e) {
                    JOptionPane.showMessageDialog(null, "Error Occurred : " + e.getMessage());
                } catch (SQLException e) {
                    try {
                        cn = DriverManager.getConnection("jdbc:mysql://localhost:3306", "root", "PramodBorana");
                        Statement st = cn.createStatement();
                        st.executeQuery("create Database questionbank");
                        cn = DriverManager.getConnection("jdbc:mysql://localhost:3306/questionbank", "root", "PramodBorana");
                        st.executeQuery("create table login ( log_id int primary key not null,passw varchar(30) not null,fname varchar(45) not null,lname varchar(45) not null,dob date not null,address varchar(200),email varchar(45) not null,phone varchar(10),doj date)");
                        st.executeQuery("create table c ( quesid int primary key not null auto_increment,ques varchar(500) not null,op1 varchar(100) not null,op2 varchar(100) not null,op3 varchar(100) not null,op4 varchar(100) not null,corr  varchar(100) not null )");
                        st.executeQuery("create table cplus ( quesid int primary key not null auto_increment,ques varchar(500) not null,op1 varchar(100) not null,op2 varchar(100) not null,op3 varchar(100) not null,op4 varchar(100) not null,corr  varchar(100) not null )");
                        st.executeQuery("create table java ( quesid int primary key not null auto_increment,ques varchar(500) not null,op1 varchar(100) not null,op2 varchar(100) not null,op3 varchar(100) not null,op4 varchar(100) not null,corr  varchar(100) not null )");
                    } catch (SQLException e1) {
                        JOptionPane.showMessageDialog(null, "Error Occurred : " + e1.getMessage());
                    }
                }
                quiz q = new quiz(cn);
                q.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ChanCan;
    private javax.swing.JButton ClearCheck;
    private javax.swing.JButton Ncan;
    private javax.swing.JFrame Record;
    private javax.swing.JScrollPane Scrolrec;
    private javax.swing.JPanel Scrolrecpanel;
    private javax.swing.JButton SubCheck;
    private javax.swing.JTextArea add;
    private javax.swing.JButton addques;
    private javax.swing.JMenuItem adques;
    private javax.swing.JTextField by;
    private javax.swing.JButton byNumber;
    private javax.swing.JButton byOption;
    private javax.swing.JButton byQues;
    private javax.swing.JButton c;
    private javax.swing.JButton cancel;
    private javax.swing.JButton cedit;
    private javax.swing.JButton chancancel;
    private javax.swing.JButton change;
    private javax.swing.JMenuItem changepa;
    private javax.swing.JFrame changepass;
    private javax.swing.JFrame changeques;
    private javax.swing.JMenuItem choption;
    private javax.swing.JButton clear;
    private javax.swing.JTextField correct;
    private javax.swing.JButton cpedit;
    private javax.swing.JButton cplus;
    private javax.swing.JButton create;
    private javax.swing.JTextField dob;
    private javax.swing.JTextField doj;
    private javax.swing.JFrame editmenu;
    private javax.swing.JTextField email;
    private javax.swing.JTextField fname;
    private javax.swing.JMenu he;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollpane;
    private javax.swing.JButton java;
    private javax.swing.JButton javaedit;
    private javax.swing.JPasswordField lat;
    private javax.swing.JPasswordField latest;
    private javax.swing.JTextField lname;
    private javax.swing.JTextField logid;
    private javax.swing.JTextField login_id;
    private javax.swing.JMenuItem logout;
    private javax.swing.JFrame menu;
    private javax.swing.JButton newreg;
    private javax.swing.JButton nextq;
    private javax.swing.JPasswordField old;
    private javax.swing.JTextField opt1;
    private javax.swing.JTextField opt2;
    private javax.swing.JTextField opt3;
    private javax.swing.JTextField opt4;
    private javax.swing.JMenu option;
    private javax.swing.JPasswordField pass;
    private javax.swing.JPasswordField pass1;
    private javax.swing.JPasswordField pass2;
    private javax.swing.JFrame password;
    private javax.swing.JTextField phone;
    private javax.swing.JTextField ques;
    private javax.swing.JButton quesSub;
    private javax.swing.JFrame quesframe;
    private javax.swing.JScrollPane quizJsp;
    private javax.swing.JPanel quizPanel;
    private javax.swing.JButton submit;
    private javax.swing.JPanel timer1;
    private javax.swing.JLabel timerLabel;
    private javax.swing.JButton upques;
    private javax.swing.JFrame user;
    private javax.swing.JMenuItem vrecord;
    // End of variables declaration//GEN-END:variables
}
